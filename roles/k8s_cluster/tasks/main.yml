---
- name: Ping the k8s nodes for testing the connectivity
  ansible.builtin.ping:

- name: Disabling swap on k8s nodes (master and worker)
  shell: |
   swapoff -a
   sed -i "s\/swap.img\#/swap.img\g" /etc/fstab

- name: Create k8s sysctl config
  ansible.builtin.copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Create k8s modules load
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Loading kernel modules ovrlay and br_netfilter and apply sysctl config
  shell: |
   modprobe overlay
   modprobe br_netfilter 
   sysctl --system

- name: Remove packages that may conflict with Docker Engine 
  shell: |
   for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

- name: Set up Docker's apt repository 
  shell: |
   apt-get update
   apt-get install ca-certificates curl
   install -m 0755 -d /etc/apt/keyrings
   curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
   chmod a+r /etc/apt/keyrings/docker.asc
 
- name: Add the repository to Apt sources
  shell: |
   echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   sudo apt-get update

- name: Install containerd
  ansible.builtin.apt:
    name: containerd.io
    state: present
   
- name: Configure SystemGroup to true and change sandbox_image
  shell: |
   containerd config default \
   | sed 's/SystemdCgroup = false/SystemdCgroup = true/' \
   | sed 's|sandbox_image = "registry.k8s.io/pause:3.6"|sandbox_image = "registry.k8s.io/pause:3.9"|' \
   | sudo tee /etc/containerd/config.toml
   systemctl restart containerd

- name: Install required packages for Kubernetes repository
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present
    update_cache: yes

#- name: Downloading the public signing key for the Kubernetes package repositories
#  shell: |
#   curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Downloading the public key for Kubernetes package repositories
  ansible.builtin.get_url:
   url: https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key
   dest: /tmp/kubernetes-release.key

- name: Converting the key in gpg
  ansible.builtin.command: 
   cmd: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-release.key
  args:
   creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Adding the appropriate Kubernetes apt repository
  ansible.builtin.shell:
   echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

- name: Updating the apt package index and install kubelet kubeadm and kubectl
  ansible.builtin.apt:
   name: 
     - kubelet 
     - kubeadm  
     - kubectl
   state: present
   update_cache: yes

- name: Enable the kubelet service before running kubeadm and mark hold kubelete kubectl and kubeadm
  ansible.builtin.shell: |
   apt-mark hold kubelet kubeadm kubectl
   systemctl enable --now kubelet
